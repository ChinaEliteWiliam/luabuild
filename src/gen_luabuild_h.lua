local function readfile(name)
   local fh = assert(io.open(name, "rb"))
   local content = fh:read "*a"
   fh:close()
   return content
end

local chunk = readfile "luabuild.lua"
      :gsub("\\", "\\\\")
      :gsub("\"", "\\\"")
      :gsub("\r*\n", "\\n")
      :gsub("\r", "\\n")
      :gsub("[ ]+", " ")
      :gsub("\t", "\\t")

io.output "out.txt"
io.write(load("return \""..chunk.."\"")())

io.output "luabuild.h"

local D = io.write

D [[
/* this file is generated by gen_luabuild_h.lua, DO NOT MODIFY THIS! */
#ifndef luabuild_h
#define luabuild_h


#include <lua.h>
#include <lauxlib.h>


static int load_chunk(lua_State *L) {
  size_t bufflen = ]]
D (load("return #\""..chunk.."\"")())
D [[
;
  char buff[] = 
]]

local pos = 1
local line = 72
chunklen = #chunk
while chunklen > 0 do
   local len = chunklen > line and line or chunklen
   local cur = chunk:sub(pos, pos+len-1)
   local count = #(cur:match "\\+$" or "")
   if count % 2 == 1 then
      cur = cur .. chunk:sub(pos+len, pos+len)
      len = len + 1
   end
   D("    \"", cur, "\"\n");
   chunklen = chunklen - len
   pos = pos + len
end

D [[
;

  return luaL_loadbuffer(L, buff, bufflen, "=luabuild.lua");
}


#endif /* luabuild_h */
]]

